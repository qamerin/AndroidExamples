<resources>
    <string name="app_name">Android Basic Tutorials</string>

    <string name="listview">A list view is an adapter view that does not know the details, such as type and contents, of the views it contains.
        Instead list view requests views on demand from a ListAdapter as needed, such as to display new views as the
        user scrolls up or down. In order to display items in the list, call setAdapter(android.widget.ListAdapter)
        to associate an adapter with the list. For a simple example, see the discussion of filling an adapter view
        with text in the Layouts guide.</string>

    <string name="checkbox">Checkboxes allow the user to select one or more options from a set.
        Typically, you should present each checkbox option in a vertical list. To create each checkbox option,
        create a CheckBox in your layout. Because a set of checkbox options allows the user to select multiple items,
        each checkbox is managed separately and you must register a click listener for each one.</string>

    <string name="imageview">ImageView class is used to display any kind of image resource in the android application
        either it can be android.graphics.Bitmap or android.graphics.drawable.Drawable
        (it is a general abstraction for anything that can be drawn in Android).
        ImageView class or android.widget.ImageView inherits the android.view.View class which is the subclass
        of Kotlin. AnyClass.Application of ImageView is also in applying tints to an image in order to reuse a
        drawable resource and create overlays on background images. Moreover, ImageView is also used to control
        the size and movement of an image.</string>

    <string name="toggle">A toggle button allows the user to change a setting between two states.
        You can add a basic toggle button to your layout with the ToggleButton object.
        Android 4.0 (API level 14) introduces another kind of toggle button called a switch that provides
        a slider control, which you can add with a Switch object.</string>

    <string name="date">A thin wrapper around a millisecond value that allows JDBC to identify this as an SQL DATE
        value. A milliseconds value represents the number of milliseconds that have passed since January 1, 1970 00:00:00.000 GMT.
        To conform with the definition of SQL DATE, the millisecond values wrapped by a java.sql.Date instance
        must be normalized by setting the hours, minutes, seconds, and milliseconds to zero in the particular time zone with which the instance is associated.
        </string>

    <string name="rating">A RatingBar is an extension of SeekBar and ProgressBar that shows a rating in stars.
        The user can touch/drag or use arrow keys to set the rating when using the default size RatingBar.
        The smaller RatingBar style ( R.attr.ratingBarStyleSmall) and the larger indicator-only style
        (R.attr.ratingBarStyleIndicator) do not support user interaction and should only be used as indicators.
        When using a RatingBar that supports user interaction, placing widgets to the left or right of the
        RatingBar is discouraged.</string>

    <string name="time">A thin wrapper around the java.util.Date class that allows the JDBC API to identify
        this as an SQL TIME value. The Time class adds formatting and parsing operations to support the JDBC
        escape syntax for time values.
        The date components should be set to the "zero epoch" value of January 1, 1970 and should not be accessed.
        </string>

    <string name="textview">A TextView displays text to the user and optionally allows them to edit it.
        A TextView is a complete text editor, however the basic class is configured to not allow editing.
        </string>

    <string name="edit">A TextView displays text to the user and optionally allows them to edit it.
        A TextView is a complete text editor, however the basic class is configured to not allow editing.
        </string>

    <string name="camera">The Android framework includes support for various cameras and camera features available on devices, allowing you to capture pictures and videos in your applications.This document discusses a quick, simple approach to image and video capture and outlines an advanced approach for creating custom camera experiences for your users.</string>
    <!-- Strings used for fragments for navigation -->
    <string name="first_fragment_label">First Fragment</string>
    <string name="second_fragment_label">Second Fragment</string>
    <string name="next">Next</string>
    <string name="previous">Previous</string>

    <string name="lorem_ipsum">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in scelerisque sem. Mauris
        volutpat, dolor id interdum ullamcorper, risus dolor egestas lectus, sit amet mattis purus
        dui nec risus. Maecenas non sodales nisi, vel dictum dolor. Class aptent taciti sociosqu ad
        litora torquent per conubia nostra, per inceptos himenaeos. Suspendisse blandit eleifend
        diam, vel rutrum tellus vulputate quis. Aliquam eget libero aliquet, imperdiet nisl a,
        ornare ex. Sed rhoncus est ut libero porta lobortis. Fusce in dictum tellus.\n\n
        Suspendisse interdum ornare ante. Aliquam nec cursus lorem. Morbi id magna felis. Vivamus
        egestas, est a condimentum egestas, turpis nisl iaculis ipsum, in dictum tellus dolor sed
        neque. Morbi tellus erat, dapibus ut sem a, iaculis tincidunt dui. Interdum et malesuada
        fames ac ante ipsum primis in faucibus. Curabitur et eros porttitor, ultricies urna vitae,
        molestie nibh. Phasellus at commodo eros, non aliquet metus. Sed maximus nisl nec dolor
        bibendum, vel congue leo egestas.\n\n
        Sed interdum tortor nibh, in sagittis risus mollis quis. Curabitur mi odio, condimentum sit
        amet auctor at, mollis non turpis. Nullam pretium libero vestibulum, finibus orci vel,
        molestie quam. Fusce blandit tincidunt nulla, quis sollicitudin libero facilisis et. Integer
        interdum nunc ligula, et fermentum metus hendrerit id. Vestibulum lectus felis, dictum at
        lacinia sit amet, tristique id quam. Cras eu consequat dui. Suspendisse sodales nunc ligula,
        in lobortis sem porta sed. Integer id ultrices magna, in luctus elit. Sed a pellentesque
        est.\n\n
        Aenean nunc velit, lacinia sed dolor sed, ultrices viverra nulla. Etiam a venenatis nibh.
        Morbi laoreet, tortor sed facilisis varius, nibh orci rhoncus nulla, id elementum leo dui
        non lorem. Nam mollis ipsum quis auctor varius. Quisque elementum eu libero sed commodo. In
        eros nisl, imperdiet vel imperdiet et, scelerisque a mauris. Pellentesque varius ex nunc,
        quis imperdiet eros placerat ac. Duis finibus orci et est auctor tincidunt. Sed non viverra
        ipsum. Nunc quis augue egestas, cursus lorem at, molestie sem. Morbi a consectetur ipsum, a
        placerat diam. Etiam vulputate dignissim convallis. Integer faucibus mauris sit amet finibus
        convallis.\n\n
        Phasellus in aliquet mi. Pellentesque habitant morbi tristique senectus et netus et
        malesuada fames ac turpis egestas. In volutpat arcu ut felis sagittis, in finibus massa
        gravida. Pellentesque id tellus orci. Integer dictum, lorem sed efficitur ullamcorper,
        libero justo consectetur ipsum, in mollis nisl ex sed nisl. Donec maximus ullamcorper
        sodales. Praesent bibendum rhoncus tellus nec feugiat. In a ornare nulla. Donec rhoncus
        libero vel nunc consequat, quis tincidunt nisl eleifend. Cras bibendum enim a justo luctus
        vestibulum. Fusce dictum libero quis erat maximus, vitae volutpat diam dignissim.
    </string>
    <string name="title_activity_detail2">DetailActivity2</string>

</resources>